---
- name: assert jenkins_admin_password is set
  fail:
    msg: jenkins_admin_password is required
  when: jenkins_admin_password is not defined

- name: assert jenkins_tls_cert is set
  fail:
    msg: jenkins_tls_cert is required
  when: jenkins_tls_cert is not defined

- name: assert jenkins_tls_key is set
  fail:
    msg: jenkins_tls_key is required
  when: jenkins_tls_key is not defined

- name: install additional OS packages
  apt: name={{ packages }} state=present
  vars:
    packages:
      - openjdk-8-jdk
      - python3-dev
      - python3-pip

# TODO remove this after next version bump
- name: uninstall docker
  apt: name=docker.io state=absent

- name: install jenkins
  import_role:
    name: geerlingguy.jenkins
  vars:
    jenkins_plugins: "{{ jenkins_default_plugins + jenkins_additional_plugins }}"
    jenkins_plugin_timeout: 120

- name: install saml keystore
  copy:
    src: "{{ jenkins_saml_keystore_path }}"
    dest: "{{ jenkins_home }}/saml-key.jks"
    owner: jenkins
    group: jenkins
    mode: "0640"
  when: jenkins_saml_keystore_path is defined
  notify:
    - restart jenkins

- name: install pipenv
  pip:
    name: pipenv
    executable: pip3
    state: present
    umask: "0022"

- name: install configuration as code
  copy:
    content: "{{ jenkins_config }}"
    dest: "{{ jenkins_home }}/jenkins.yaml"  # default configuration-as-code location
    owner: jenkins
    group: jenkins
    mode: 0640
  notify:
    - restart jenkins

# TODO remove this after next version bump
- name: setup docker configuration
  file:
    path: /etc/docker/daemon.json
    state: absent

- name: setup jenkins credentials for CLI tasks
  copy:
    dest: /root/jenkins.txt
    mode: "0640"
    content: |
      admin:{{ jenkins_admin_password }}

- name: cron to update plugins
  copy: dest=/etc/cron.daily/{{ item }} src=etc_cron.daily_{{ item }} mode=0755 owner=root group=root
  with_items:
    - datagov-jenkins

# TODO remove this after next version bump
- name: remove docker cron
  file: path=/etc/cron.daily/datagov-docker state=absent

- name: install ssl-cert packages
  apt: name={{ packages }} state=present
  vars:
    packages:
      - ssl-cert

- name: install tls certificate
  copy: content={{ jenkins_tls_cert }} dest=/etc/ssl/certs/jenkins.crt owner=root group=root mode=0644

- name: install tls key
  copy: content={{ jenkins_tls_key }} dest=/etc/ssl/private/jenkins.key owner=root group=ssl-cert mode=0640

- name: install jenkins site
  template: src=etc_nginx_sites-available_jenkins.conf.j2 dest=/etc/nginx/conf.d/default.conf mode=0644 owner=root group=root
  notify: reload nginx
